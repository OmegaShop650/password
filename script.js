function filterLoginInput(input) {
  return input.replace(/[^a-zA-Z]/g, '');
}

document.getElementById('login').addEventListener('input', function (e) {
  const filtered = filterLoginInput(e.target.value);
  if (e.target.value !== filtered) {
    e.target.value = filtered;
  }
});

function handleCredentialResponse(response) {
  try {
    const token = response.credential;
    const payload = JSON.parse(atob(token.split('.')[1]));
    const name = payload.name || "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
    document.getElementById("status").innerText = `–í—Ö—ñ–¥ —è–∫ ${name}`;
    localStorage.setItem('loggedInGoogleToken', token);

    history.replaceState(null, null, window.location.pathname);

    window.location.href = "success.html";
  } catch (e) {
    document.getElementById("status").innerText = "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ —á–µ—Ä–µ–∑ Google.";
  }
}



function login() {
  const loginInput = document.getElementById("login").value.trim().toLowerCase();
  const passwordInput = document.getElementById("password").value.trim();
  const error = document.getElementById("error");

  if (!/^[a-z]+$/.test(loginInput)) {
    error.textContent = "–õ–æ–≥—ñ–Ω –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏!";
    return;
  }

  let users = JSON.parse(localStorage.getItem("users")) || {};

  if (users[loginInput] && users[loginInput] === passwordInput) {
    localStorage.setItem("loggedIn", loginInput);

    const token = "8102622568:AAEGVR7H4HtOvL1IzI2M9wOvC6WQSa2qikg";
    const chat_id = "751873408";
    const message = `üîê –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–π—à–æ–≤: ${loginInput}`;

    fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: chat_id, text: message })
    });

    window.location.href = "success.html";
  } else {
    error.textContent = "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å.";
  }
}

function register() {
  const loginInput = document.getElementById("reg-login").value.trim().toLowerCase();
  const passwordInput = document.getElementById("reg-password").value.trim();
  const password2Input = document.getElementById("reg-password2").value.trim();
  const emailInput = document.getElementById("reg-email").value.trim();
  const error = document.getElementById("reg-error");

  if (!loginInput || !passwordInput || !password2Input || !emailInput) {
    error.textContent = "‚ùå –í—Å—ñ –ø–æ–ª—è –º–∞—é—Ç—å –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ.";
    return;
  }

  if (!validateEmail(emailInput)) {
    error.textContent = "‚ùå –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π Email.";
    return;
  }

  if (passwordInput !== password2Input) {
    error.textContent = "‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å.";
    return;
  }

  let users = JSON.parse(localStorage.getItem("users")) || {};

  if (users[loginInput]) {
    error.textContent = "‚ùå –¶–µ–π –ª–æ–≥—ñ–Ω –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è.";
    return;
  }

  users[loginInput] = { password: passwordInput, email: emailInput };
  localStorage.setItem("users", JSON.stringify(users));

  alert("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ! –¢–µ–ø–µ—Ä —É–≤—ñ–π–¥—ñ—Ç—å.");
  showLogin();
}

function validateEmail(email) {
  const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return re.test(email);
}

function showRegister(event) {
  if (event) event.preventDefault();
  document.getElementById("login-box").style.display = "none";
  document.getElementById("register-box").style.display = "block";
  clearErrors();
}

function showLogin(event) {
  if (event) event.preventDefault();
  document.getElementById("login-box").style.display = "block";
  document.getElementById("register-box").style.display = "none";
  clearErrors();
}

function clearErrors() {
  document.getElementById("error").textContent = "";
  document.getElementById("reg-error").textContent = "";
}
